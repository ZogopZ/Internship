#!/bin/bash
source /home/zois/Documents/classified/Utilities/tools  # Include tools in this file. Relative path to tools.


# User recon.
userB=false
if [ "$USER" == "root" ]; then
	echo -e "${WarningDim}Warning!   |${Warning} Root user detected... Please switch to current user.${ColorOff}"
fi
while [ "$userB" == "false" ]
do
	echo -e "${UserDim}User       |${User} Please type your username and press enter.${ColorOff}"
	read -p "$(echo -e ${UserDim}"user       | "${User})" username
	if [ "$username" == "root" ]; then
		echo -e "${Error}Error      | User cannot be root... Please enter a valid username.${DefaultBd}${ColorOff}"
	elif [ "$username" == "zois" ]; then
		echo -e "${UserDim}User       |${User} Continuing with user ${username}....${ColorOff}"
		userB=true
	else
		echo -e "${Error}Error      | Invalid username ${username}. Please try again...${DefaultBd}${ColorOff}"
  	fi
done
sectionEnd

pathToHardLink="/home/$username/Documents/classified/Utilities/good-morning"
pathToTempHardLink="/home/$username/Documents/classified/Utilities/good-morning.tmp"
# pathToHardLink="/home/#username/Documents/classified/Testing/tst_good-morning"
messageLine=$(grep -n Message $pathToHardLink | cut -d : -f 1)   # Find which line has the previous message to be edited.
messageLength=0
while [[ $messageLength -gt 76 || $messageLength -eq 0 ]]   # Message length cannot exceed 76 characters. This is for printing reasons only.
do
	echo -e "${UserDim}User       |${User} Please type your message and press enter. You are allowed 76 characters.${ColorOff}"
	printf "${UserDim}User       |${User} " && printf "\u2199  " && printf "\u21D2%0.s" {1..70} && printf "  \u2199\n"
	read -p "$(echo -e ${UserDim}"user       | "${User})" newMessage
	messageLength=${#newMessage}   # Calculate length of the new message typed.
	if [ $messageLength -gt 76 ]; then   # Too long message.
		echo -e "${WarningDim}Warning!   |${Warning} Message cannot exceed 76 characters... You entered $messageLength characters.${ColorOff}"
	elif [  $messageLength -lt 76 ]; then   # New message has the correct length.
		countSpaces=$((76-$messageLength))   # Find out how many space characters need to be appended.
		appendSpaces=$(head -c $countSpaces < /dev/zero | tr '\0' '\040')   # Create a string with calculated space characters..
		newMessage="${newMessage}${appendSpaces}"   # Append spaces string to new message.
	fi
done
sectionEnd

sed  "${messageLine}"'s/\(.*day:|\*\*\* \)\(.*\)\( \*\*\*.*\)/\1'"${newMessage}"'\3/' $pathToHardLink > $pathToTempHardLink
cat $pathToTempHardLink > $pathToHardLink
# Use sed to substitue old message with new message in file good-morning
sed -n -e 12p -e 13p -e 14p $pathToHardLink   # Check if everything looks fine.
rm $pathToTempHardLink
